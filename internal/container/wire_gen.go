// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/ct-zh/go-redis-proxy/internal/dao"
	"github.com/ct-zh/go-redis-proxy/internal/handler"
	"github.com/ct-zh/go-redis-proxy/internal/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeContainer() (*Container, func(), error) {
	redisDAOImpl := dao.NewRedisDAO()
	redisStringServiceImpl := service.NewRedisStringService(redisDAOImpl)
	redisListServiceImpl := service.NewRedisListService(redisDAOImpl)
	redisSetServiceImpl := service.NewRedisSetService(redisDAOImpl)
	redisHandler := handler.NewRedisHandler(redisStringServiceImpl, redisListServiceImpl)
	redisListHandler := handler.NewRedisListHandler(redisListServiceImpl)
	redisSetHandler := handler.NewRedisSetHandler(redisSetServiceImpl)
	container := &Container{
		RedisDAO:         redisDAOImpl,
		StringService:    redisStringServiceImpl,
		ListService:      redisListServiceImpl,
		SetService:       redisSetServiceImpl,
		RedisHandler:     redisHandler,
		RedisListHandler: redisListHandler,
		RedisSetHandler:  redisSetHandler,
	}
	return container, func() {
	}, nil
}

// wire.go:

// Container holds all application dependencies
type Container struct {
	// DAO layer
	RedisDAO dao.RedisDAO

	// Service layer
	StringService service.RedisStringService
	ListService   service.RedisListService
	SetService    service.RedisSetService

	// Handler layer
	RedisHandler     *handler.RedisHandler
	RedisListHandler *handler.RedisListHandler
	RedisSetHandler  *handler.RedisSetHandler
}

// buildProvider
var buildProvider = wire.NewSet(wire.Bind(new(dao.RedisDAO), new(*dao.RedisDAOImpl)), dao.NewRedisDAO, wire.Bind(new(service.RedisStringService), new(*service.RedisStringServiceImpl)), service.NewRedisStringService, wire.Bind(new(service.RedisListService), new(*service.RedisListServiceImpl)), service.NewRedisListService, wire.Bind(new(service.RedisSetService), new(*service.RedisSetServiceImpl)), service.NewRedisSetService, handler.NewRedisHandler, handler.NewRedisListHandler, handler.NewRedisSetHandler, wire.Struct(new(Container), "*"))
